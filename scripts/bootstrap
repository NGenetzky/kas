#!/bin/sh
# vim: set ts=4:
#
# Ensures that Python 3.4+ is available and installs modules specified
# in requirements-dev.txt.
#
# Environment variables:
#   PYTHON : Python executable to use (default is python3 or python on PATH).
#
# This script follows convention https://github.com/github/scripts-to-rule-them-all.
# Original source: https://gist.github.com/jirutka/c5200ddcf00a86603314988fcad9532f
set -eu

_SCRIPT_REL_TO_BASE='../'
D_SCRIPT="$(CDPATH='' cd -- "$(dirname -- "$0")" && pwd -P)"
D_BASE="${D_SCRIPT}/${_SCRIPT_REL_TO_BASE}"
readonly \
	D_BASE \
	D_SCRIPT \
	_SCRIPT_REL_TO_BASE

cd "${D_BASE}" || exit 1

. "./scripts/utils.sh"

readonly ENV_DIR="$(pwd)/.venv"


if [ ! -f "$ENV_DIR/bin/python3" ]; then
	info 'Initializing Python virtual environment...'

	# Find Python executable.
	for pybin in "${PYTHON:-}" python3 python NOT_FOUND; do
		command -v "$pybin" 2>&1 >/dev/null && break
	done
	if [ "$pybin" = 'NOT_FOUND' ]; then
		die 'Could not find python executable! Please install Python 3.5.'
	fi

	if ! "$pybin" -c 'import sys; exit(not sys.version_info >= (3, 4, 0))'; then
		die "Python 3.4+ is required, but you have $("$pybin" -V 2>&1)!"
	fi

	"$pybin" -m venv "$ENV_DIR"

	# For the case when PATH is already set, but venv was empty.
	hash -r 2>&1 >/dev/null
fi

. "${ENV_DIR}/bin/activate"

if ! is_on_path "$ENV_DIR/bin"; then
	warn 'WARN: Failed to activate'
	exit 1
fi


info 'Installing Python modules...'
python3 -m pip install --disable-pip-version-check -r requirements-dev.txt 2>&1 \
	| sed	-e '/^Requirement already satisfied/d' \
			-e '/don.t match your environment$/d'
